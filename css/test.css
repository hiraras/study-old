/*外部样式表测试*/
/*注意：样式是向下应用的，如果对div标签使用了一个样式，那么下方有定义类或者id选择器的div也会有应用，需要注意*/
/*
 *几种类型的选择器
 * id：#a{}
 * class:.a{}
 * 属性选择器(元素有属性即可，即使属性没有赋值，若属性还有赋值，则只对有该赋值的属性进行添加属性)：
 * a[title="abc"]{}对有title="abc"属性的a元素进行css样式应用
 * a[class~="abc"]{}可以选择出class属性中包含了abc单词的元素
 * 这种写法可以对a[class="abc aaa"]或a[class="aaa abc"]进行应用
 * 但是，a[class="abc1"]不进行应用
 * title属性也适用
 * 
 * [abc^="def"]	选择 abc 属性值以 "def" 开头的所有元素
 * [abc$="def"]	选择 abc 属性值以 "def" 结尾的所有元素
 * [abc*="def"]	选择 abc 属性值中包含子串 "def" 的所有元素
 * 假设一个 HTML 文档中有一系列图片，其中每个图片的文件名都形如 figure-1.jpg 和 figure-2.jpg。
 * 就可以使用以下选择器匹配所有这些图像：
 * img[src|="figure"] {border: 1px solid gray;}
 * 
 * 组合：
 * 
 * 1.1 div.abc表示应用了.abc类的div元素
 * 1.2 div .abc表示div后代中用了.abc类的元素
 * 2. div+div表示与第一个div同级的相邻div
 * 3. div p表示div后代集合中的p标签
 * 4. div>p 表示div子一级的所有p标签
 * 
 * */
/*
 * 
 * --------------主要是文本相关的样式----------------------
 * 
 * */
/*
 * 内边距、边框和外边距都是可选的，默认值是零。但是，许多元素将由用户代理样式表设置
 * 外边距和内边距。可以通过将元素的 margin 和 padding 设置为零来覆盖这些浏览器样式。
 * 
 * */
*{
	margin: 0;
	padding: 0;
}

div.abc{
	position:relative;
	left:100px;
	width:600px;
	height:600px;
	color:purple;
	/*background-image:url(../img/1.jpg);*/
	/*第一个center设置水平居中对齐，第二个设置垂直居中对齐
	 当只有一个值时，此值为水平方向，垂直方向默认为居中
	 * */
	background:url(../img/2.jpg);
	background-repeat: no-repeat;
	background-position:50% 50%;
	/*设置元素内容首行缩进,能设置成负值
	 * 提示：如果想把一个行内元素的第一行“缩进”，可以用左内边距或外边距创造这种效果。
	 不过在为 text-indent 设置负值时要当心，如果对一个段落设置了负值，那么首行的某些文本
	 可能会超出浏览器窗口的左边界。为了避免出现这种显示问题，建议针对负缩进再设置一个外边距或一些内边距：
	p {text-indent: -5em; padding-left: 5em;}
	 * */
	/*text-indent:-2em;*/
	/*把背景图片设置为fixed（相对于窗口），但不会超过容器*/
	 /*background-attachment:fixed;*/
	text-align: center;
	/*设置各单词之间的间隔，正值扩大，负值拉近，好像是以空格间隔判断是否为单词*/
	word-spacing: 2em;
	/*设置各字母之间的间隔，正值扩大，负值拉近*/
	letter-spacing: 0em;
	/*设置单词的大小写，uppercase为大写，lowercase为小写，capitalize为单词首字母大写*/
	text-transform: uppercase;
	/*设置文本装饰，underline子划线，overline上划线，line-through中心穿过,none无,可同时设置多个，
	 * 好像不会继承给子级元素（如果父级元素设置子划线，子级元素设置了贯穿线，则子级元素内只有贯穿线）*/
	text-decoration:blink overline underline;
	/*下面的规则告诉浏览器按照平常的做法去处理：丢掉多余的空白符。如果给定这个值，换行字符（回车）
	 * 会转换为空格，一行中多个空格的序列也会转换为一个空格。*/
	white-space: normal;
	/*设置字体阴影*/
	text-shadow: #0000FF;
	/*设置字体，当没有字体1时，显示字体2，防止没有设置任何样式，当字体为几个单词中间以空格隔开时，
	 * 要加引号,但在标签的style属性中设置相关字体时，要用单引号*/
	font-family:arial,sans-serif,'new york';
	/*设置字体表现形式，normal正常，italic斜体，oblique倾斜（后面两个表现形式差不多）*/
	font-style: normal;
	/*设置字体粗细，能设置100-900*/
	font-weight: bold;
	/*设置字体大小
	 （设置文档的字体大小，然后可用rem和em单位表示单位字体大小长度，例如，设置了font-size为100px,则1rem=100px，
	 rem相对于根元素的字体大小，em相对于父元素的字体大小）
	 */
	font-size: 30px;
}
div.abc div{
	width:60px;
	/*以上一个有了定位样式的父元素为基础定位，直到找到body*/
	position:absolute;
	left: 75%;
	top: 50%;
	text-decoration: underline;
}


/*
 
 * 列表（ul>li,ol>li）：
 * CSS 列表属性允许你放置、改变列表项标志，或者将图像作为列表项标志。
 * 详见：http://www.w3school.com.cn/tiy/t.asp?f=csse_list-style-type_all
 * */

#liebiaoDiv{
	text-align: center;
}
#liebiaoDiv ul{
	/*设置列表项前的符号，包括none、circle、square、disc等*/
	list-style-type: circle;
	/*设置符号在列表的内部还是外部，有inside、outside、inherit（规定从父元素中继承），不知为何这次测试时
	 只有加上这句才能显示出项目前的符号 = =*/
	list-style-position: inside;
}
#liebiaoDiv li{
	/*设置图像为列表项前符号*/
	/*list-style-image: url(../img/2.jpg);*/
	
	
	/*float:left;*/
}
#liebiaoDiv ol{
	list-style-type: decimal;
	list-style-position: inside;
}

/*
 *表格： 
 * 
 * 
 * 
 * */
#tableDiv{
	text-align: center;
}
#tableDiv table,#tableDiv th,#tableDiv td{
	border:1px solid black;
}
#tableDiv table{
	position:relative;
	left:50%;
	margin-left: -30px;
	/*table和tr、th各有各的边框，所以看上去有两层边框，设置了此属性使表格只有一层边框*/
	/*border-collapse: collapse;*/
	width:30%;
	/*设置表格标题的位置，top、bottom和inherit，inherit为从父元素中继承*/
	caption-side:bottom;
	/*设置单元格间距*/
	border-spacing:10px;
}
#tableDiv th,#tableDiv td{
	/*设置垂直对齐*/
	vertical-align: bottom;
	padding: 20px;
	/*隐藏表格中没有内容的单元格*/
	empty-cells: hide;
}
/*在元素外面绘制轮廓*/
#tableDiv{
	outline: 1px solid red;
	/*设置边框线样式:dotted、dashed、solid、double、groove、ridge、inset、outset*/
	outline-style: dashed;
	/*边框颜色*/
	outline-color: blue;
	/*边框粗细*/
	outline-width:2px;
}
/*
 
 * 元素框的最内部分是实际的内容，直接包围内容的是内边距。内边距呈现了元素的背景。内边距
 * 的边缘是边框。边框以外是外边距，外边距默认是透明的，因此不会遮挡其后的任何元素。
 * 
 * */
.outDiv{
	width:100px;
	height:100px;
	background-color:red;
	
}
.innerDiv{
	background-color:purple;
	width:30px;
	height:30px;
	/*padding属性取百分比时，上下和左右都是根据父元素的width来定，跟父元素的height无关*/
	padding:20px 10px;
	border:1px solid blue;
	/*margin属性：
	 *	 外边距合并指的是，当两个垂直外边距相遇时，它们将形成一个外边距。
	 *	合并后的外边距的高度等于两个发生合并的外边距的高度中的较大者。
	 * 当两元素同级时，两元素margin单纯的合并；
	 * 当两元素为父子关系时，父元素若没有border或padding，子元素寻找更上一级或者
	 * 与父元素同级的，位置在父元素之上的元素为参照，
	 * 与父元素（和更高级的没有border和padding的元素），进行合并
	 * 例子详见：http://www.w3school.com.cn/css/css_margin_collapsing.asp
	 * 当应用了float属性后，不再发生合并现象
	 * */
	
	margin:30px 10px;
	
}

/*
 
 * 关于margin和padding
 * 例如两个div，第一个div包括第二个div，若第一个div宽度不够包括第二个div的padding和margin所有内容
 * padding会强制撑开外面的div，margin则不会超出外面的div，若大小不够则省略右边的margin,左边的margin则不会被忽略(哪怕宽度不够)
 * 上下margin则如上面所说进行合并
 * 
 * */

/*边框
 
 * border-style的默认值为none，所以想要元素周围的边框显示，必须手动设置显示
 * 元素的背景范围为：元素内容+元素padding+元素border
 * */
.borderDiv{
	width: 10%;
	height: 60px;
	background-color: red;
	border:2px outset blue;
	/*下面这条规则为类名为 aside 的段落定义了四种边框样式：
	 * 实线上边框、点线右边框、虚线下边框和一个双线左边框。*/
	border-style: solid dotted dashed double;
	
	/*为单边框设置样式*/
	border-top-style: outset;
	/*边框粗细，同边框样式，可以单独设置某一边的边框粗细*/
	border-width: 3px;
	/*边框颜色，同以上两者，可以单独设置某一边的边框颜色。
	 * border-color: transparent;可以设置一个有宽度但是透明的边框
	 * */
	border-color: black blue;
}

/*定位（position）
 * 元素定义position:absolute或float以后变成行内块状元素
 * overflow:scroll 内容超过元素范围时，使用滚动条显示
 * overflow:hidden 内容超过元素范围时，隐藏超出的内容
 * clip:rect(top,right,bottom,left)剪切图像，数值为边的位置（只能设置矩形）
 * z-index设置显示的层级数，类似ps等的图层，值越大层级越高，层级高的显示
 * z-index 仅能在定位元素上奏效（position 属性值为 relative 或 absolute 或 fixed的对象）。
 * ie6对z-index先看父级的层叠位置（层叠位置相同的，后面在上方），再看内部元素设置的z-index值
 * 而高级浏览器只按照设置的z-index属性大小依次显示，相同的后面在上方
 * */
.positionOuter{
	width: 100px;
	height: 100px;
	background: red;
	position:relative;
	overflow: scroll;
	font-size: 30px;
}

.positionInner{
	width: 50px;
	height: 50px;
	background: blue;
	position:absolute;
	top:20px;
	left:20px;
}

.positionOuter2{
	width: 300px;
	height: 300px;
	background: red;
	position:relative;
	left:20px;
}

.positionInner2{
	width: 100px;
	height: 100px;
	background: blue;
	position:absolute;
	top:20px;
	left:20px;
}

/*
 
 * 浮动：
 * 浮动的框可以向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。
 * 由于浮动框不在文档的普通流中，所以文档的普通流中的块框表现得就像浮动框不存在一样。
 * 注意：float是根据文档的元素从上往下进行应用，即：
 * 即使你一个div设置了clear:both，后面一个div设置了float，但是不清楚后面一个div的float
 * 
 * 元素依次往下生成，若设置了float则上浮，若第二个元素也上浮则查看宽度，宽度足够就贴在旁边，
 * 宽度不够就向下一行（若有三个浮动，且一二占满一行且一的高度大于二的，此时三排在一的右边，且在二的下边）
 * 若一不浮动，则先应用一的独占一行，在应用二的浮动
 * 所有浮动层级一样
 * float之后虽然层级往上了，但是不会遮盖住文字、图片等内容，会遮住div,此时，图片等内容会显示在float元素的区域外（包括元素的margin范围）
 * */
.divFloat img{
	float:left;
}
.divFloat p{
	/*clear属性设置哪边不挨着浮动框*/
	/*clear:left;*/
}
.divFloat1{
	background-color: red;
	width:400px;
	height:250px;
	float:left;
	margin-right: 20px;
	clear:left;
}
.divFloat2{
	background-color: blue;
	width:620px;
	height:190px;
	/*此条代码有无可以帮助理解float的机制*/	
	/*float:left;*/
}
.divFloat3 {
	background-color: purple;
	width:200px;
	height:220px;
	margin-left: 20px;
	float:left;
	/*clear为生成元素时，判断元素的左右是否有浮动元素，若有则直接另起一行（看上去是这样，实际是如何有待多测试）*/
	/*下面这条代码能更好的帮助理解clear的用处*/
	clear:both;	
}

.outFloatDiv{
	background-color: red;
	/*这条代码帮助了解外部元素设与不设float属性，内部元素设置float属性时的样子*/
	/*float:left;*/
	width:100px;
	height:100px;
	/*clear:left;*/
}
/*
 
 * 当外部div没有float，内部div设置了float属性，此时先生成外部div无浮动，再生成内部div，x为外部div的左右边框，y为float那一层
 * 中最下面的元素另起一行,此时内部元素独占float层的一行
 * */
.innerFloatDiv{
	background-color: blue;
	float:right;
	width:50px;
	height:50px;
}


/*
 * 因为浮动不会遮挡住图像和文字等，所以这图片会被强制挤到下方，而外部div的高度也会随之扩展。
 * */
.shuxing img[value]{
	border:2px solid red;
}
.a{
	background-color: rgba(100,100,100,0.5);
}
.b{
	color:red;
	height:50px;
}
.testImgCss{
	width:300px;
	height:200px;
}
/**
 * 伪类and伪元素：
 * 详见：
 * http://www.w3school.com.cn/css/css_pseudo_classes.asp（伪类）
 * http://www.w3school.com.cn/css/css_pseudo_elements.asp（伪元素）
 * */
/*链接：
	 链接的四种状态：
	 *  a:link - 普通的、未被访问的链接
		a:visited - 用户已访问的链接
		a:hover - 鼠标指针位于链接的上方
		a:active - 链接被点击的时刻
		
		当为链接的不同状态设置样式时，请按照以下次序规则：（为了保证在有多个css指向时，优先级相同时，下面的样式覆盖上面的样式，
		例如一个链接已经被点击，此时再将鼠标移上时，应该是显示移上时的样式，而不是已被点击时的样式，而当移上
		的css代码在点击后的css代码前面时，显示的一直为被点击过后的样式）
			a:hover 必须位于 a:link 和 a:visited 之后
			a:active 必须位于 a:hover 之后
*/
/*
 
 * 还能让伪类选择器和类选择器组合使用
 * 例如：
 * a.style1:link{}
 * a.style1:visited{}
 * a.style2:link{}
 * a.style2:link{}
 * 这样就设置了两组不同的超链接伪类样式
 * */
#linkDiv a:link{
	color: black;
	text-decoration: none;	
	background-color: rgba(100,100,100,0.4);
}
#linkDiv a:visited{
	color:rgb(255,0,23);
	text-decoration:none;
}
#linkDiv a:hover{
	color:blue;
	text-decoration: underline;
}
#linkDiv a:active{
	color:purple;
	text-decoration:underline;
}

/*当获得焦点时应用*/
.inputFocus input:focus{
	background-color:yellow;
}
/*当选择的p元素为某一个元素的第一个子元素时（遍历每一个元素，如果该元素子一层第一个元素为p元素时，该p元素应用样式）
 * （而不是所有p标签中第一个元素）*/
p:first-child{
	font-size:32px;
	font-family: "微软雅黑";
	color: green;
	font-style: italic;
}
/*伪元素*/
/*为p标签第一行内容设置样式*/
p:first-line{
	
	color:blue;
}
/*为p标签第一个字母设置样式
 * "first-letter" 伪元素只能用于块级元素。
 * */
p:first-letter{
	color:black;
	font-size: 20px;
}
/*向p元素前插入一张图片*/
p:before{
	/*content: url(../img/2.jpg);*/
}

/*向p元素后插入一张图片*/
p:after{
	/*content: url(../img/2.jpg);*/
}

/*------------------css综合应用--------------------------*/

/*------------------块状元素对齐--------------------------*/
/*保证内部元素使用position:absolute定位时不会以body来定位*/
.positionFatherDiv{
	position:relative;
	left:0;
	top:0;
	width:100%;
}

.alignDiv{
	width:60%;
	height:50px;
	background-color: blue;
	/*---使用margin-left和margin-right来对齐----*/
	/*
	margin-left: auto;
	margin-right: auto;
	*/
	/*--使用position:absolute和position:relative来定位---*/
	/*
	position:absolute;
	left: 50%;
	margin-left: -30%;
	*/
	/*
	position:relative;
	left: 50%;
	margin-left: -30%;
	*/
}

/*
 * 关于text-align样式
 * 当父元素有text-align:center属性时，子元素的文字、图片、设置了inline(inline类标签宽高不可设置，只会被内容给撑开)
 * 或这inline-block属性的元素都会居中
 * 
 */

/*------------------行高--------------------------*/
.lineHeightDiv{
	line-height: 10px;
}

/*------------------一个简单的无表格页面--------------------------*/
.testContainerDiv{
	position: relative;
	left: 0;
	top: 0;
	background-color: gray;
	text-align: center;
	margin: 0;
	padding: 0;
}
.testHeaderDiv{
	
}
.testSummaryDiv{
	float: left;
	width:40%;
	background-color: white;
	height:100px;
}
.testContentDiv{
	float:left;
	width:60%;
	background-color: white;
	height: 100px;
	margin-left: -1px;
	border-left: 1px dashed black;
}
.testFooterDiv{
	
}

/*--------------------------------------------*/
.testHiddenDiv{
	/*可见*/
	visibility: visible;
	/*不可见（就算不可见元素的空间还是有占用的）*/
	/*visibility:hidden;*/
	/*
	 *collapse:
	 * 当在表格元素中使用时，此值可删除一行或一列，但是它不会影响表格的布局。
	 * 被行或列占据的空间会留给其他内容使用。如果此值被用在其他的元素上，会呈现为 "hidden"。 
	 * */
}

/*------------------------导航条-----------------------------*/
.daohangtiaoDiv ul{
	text-align: center;
	width:100%;
	list-style-type: none;
}
.daohangtiaoDiv ul li{
	float:left;
	background-color: blue;
	border-left-style: dashed;
	border-left-color: white;
	border-left-width: 1px;
	width: 20%;
	margin-left: -1px;
}

/*-----------------------------------------------------------*/

/*---------------------图像透明度------------------------*/
.opacityImg{
	opacity: 0.5;
	filter:alpha(opacity=50); /* 针对 IE8 以及更早的版本 */
}

/*---------------------以下为css3------------------------*/
/*边框*/
.borderOfCss3{
	width: 300px;
	height: 200px;
	background-color: gray;
	border:1px solid black;
	/*设置圆角*/
	border-radius: 20px;/*设置了100%则不管原始高宽都为圆形*/
	-moz-border-radius:25px; /* Old Firefox */
	/*设置元素的阴影，参数分别为:距离源元素的x，距离源元素的y，边框模糊的范围，阴影的颜色*/
	box-shadow: 50px 50px 20px red;
	/*设置边框为图片,详见：http://www.w3school.com.cn/cssref/pr_border-image.asp*/
	border-image: url(../img/1.jpg) 30 30 round;
}

.backgroundOfCss3_1{
	width:600px;
	height:450px;
	background: url(../img/1.jpg);
	/*设置背景图片的尺寸*/
	/* 老版本的 Firefox */
	/*1.
	-moz-background-size:63px 100px; 
	background-size:400px 300px;
	*/
	/* 老版本的 Firefox */
	/*2.百分比来设置*/
	-moz-background-size:63px 100px; 
	background-size:400px 100%;
	
	/*设置背景图片不重复*/
	background-repeat: no-repeat;
	border:2px solid blue;
}
.backgroundOfCss3_2{
	width:600px;
	height:450px;
	/*设置双重背景第一个在上面*/
	background-image: url(../img/2.jpg),url(../img/1.jpg);
	/*设置背景图片不重复*/
	background-repeat: no-repeat;
	border:20px solid rgba(0,0,0,0.5);
	background-origin: border-box;
	 /* Safari */
	-webkit-background-origin: border-box;
	
	
}


.textNewPropertyOfCss3{
	border:2px solid black;
	/*1234四个参数分别对应：相对原来位置的x，相对原来位置的y，模糊的像素，阴影颜色*/
	text-shadow: 10px 10px 1px black;
	/*文本过长超过区域时，进行拆分换行*/
	word-wrap: break-word;
	/*
	 *还有一些新的text属性，详见：
	 * 	http://www.w3school.com.cn/css3/css3_text_effect.asp 
	 * */
}

/*
 
 * 使用自己的字体：
 * 
 * */
/*这只是引入了myFont这个字体样式，要应用还需要调用*/
@font-face {
	font-family:myFont;
	src: url('xxxxxxx.ttf');
}

/*--------------------2d转换-----------------------*/
/*
 
 * 
 * -ms-transform: ;		 IE 9 
 * -webkit-transform: ;	Safari and Chrome 
 * -o-transform: ;		 Opera 
 * -moz-transform: ;		 Firefox 
 * 若上下元素有遮挡部分，则后面的元素在上
 * 
 * */
.changeShapeOf2d .d1{
	height:50px;
	width:80px;
	border: 2px solid black;
	background-color: gray;
	font-weight: blod;
	text-align: center;
	margin-bottom: 20px;
	/*位移元素x,y*/
	-webkit-transform: translate(20px,30px);
	-moz-transform: translate(20px,30px);
	-ms-transform: translate(20px,30px);
	-o-transform: translate(20px,30px);
	transform: translate(20px,30px);
}

.changeShapeOf2d .d2{
	height:50px;
	width:80px;
	border: 2px solid black;
	background-color: gray;
	font-weight: blod;
	text-align: center;
	margin-bottom: 20px;
	/*顺时针旋转30度*/
	-webkit-transform: rotate(30deg);
	-moz-transform: rotate(30deg);
	-ms-transform: rotate(30deg);
	-o-transform: rotate(30deg);
	transform: rotate(30deg);
}
.changeShapeOf2d .d3{
	height:50px;
	width:80px;
	border: 2px solid black;
	background-color: gray;
	font-weight: blod;
	text-align: center;
	margin-bottom: 20px;
	/*x，y方向缩放元素*/
	-webkit-transform: scale(0.6,0.6);
	-moz-transform: scale(0.6,0.6);
	-ms-transform: scale(0.6,0.6);
	-o-transform: scale(0.6,0.6);
	transform: scale(0.6,0.6);
}
.changeShapeOf2d .d4{
	height:50px;
	width:80px;
	border: 2px solid black;
	background-color: gray;
	font-weight: blod;
	text-align: center;
	margin-bottom: 20px;
	/*倾斜元素，按x轴和y轴*/
	-webkit-transform: skew(30deg,30deg);
	-moz-transform: skew(30deg,30deg);
	-ms-transform: skew(30deg,30deg);
	-o-transform: skew(30deg,30deg);
	transform: skew(30deg,30deg);
}
.changeShapeOf2d .d5{
	height:50px;
	width:80px;
	border: 2px solid black;
	background-color: gray;
	font-weight: blod;
	text-align: center;
	margin-bottom: 20px;
	/*对元素进行旋转、倾斜、缩放和位移.六个参数分别为：缩放x，缩放y，倾斜x，倾斜y，位移x，位移y*/
	-webkit-transform: matrix(0.866,0.5,-0.5,0.866,0,0);
	-moz-transform: matrix(0.866,0.5,-0.5,0.866,0,0);
	-ms-transform: matrix(0.866,0.5,-0.5,0.866,0,0);
	-o-transform: matrix(0.866,0.5,-0.5,0.866,0,0);
	transform: matrix(0.866,0.5,-0.5,0.866,0,0);
}

/*--------------------3d转换-----------------------*/
/*
 *
 * 
 * -webkit-transform: ;	Safari 和 Chrome 
 * -moz-transform: ; Firefox 
 * 
 * */
.changeShapeOf3d .d1{
	height:50px;
	width:80px;
	border: 2px solid black;
	background-color: gray;
	font-weight: blod;
	text-align: center;
	margin-bottom: 20px;
	/*3D下，延x轴旋转*/
	-webkit-transform: rotateX(180deg);
	-moz-transform: rotateX(180deg);
	transform: rotateX(180deg);
	perspective: 300px;
}
.changeShapeOf3d .d2{
	height:50px;
	width:80px;
	border: 2px solid black;
	background-color: gray;
	font-weight: blod;
	text-align: center;
	margin-bottom: 20px;
	perspective: 300px;
	/*3D下，延y轴进行旋转*/
	-webkit-transform: rotateY(135deg);
	-moz-transform: rotateY(135deg);
	transform: rotateY(135deg);
}
.changeShapeOf3d .d3{
	height:50px;
	width:80px;
	border: 2px solid black;
	background-color: gray;
	font-weight: blod;
	text-align: center;
	margin-bottom: 20px;
	/*3D位置的移动*/
	-webkit-transform: translate3D(10px,10px,10px);
	-moz-transform: translate3D(10px,10px,10px);
	transform: translate3D(10px,10px,10px);
}
.changeShapeOf3d .d4{
	height:50px;
	width:80px;
	border: 2px solid black;
	background-color: gray;
	font-weight: blod;
	text-align: center;
	margin-bottom: 20px;
	/*3D位置的缩放*/
	-webkit-transform: scale3D(0.5,0.5,0.5);
	-moz-transform: scale3D(0.5,0.5,0.5);
	transform: scale3D(0.5,0.5,0.5);
}

/*perspective(n),定义 3D 转换元素的透视视图。*/

/*transition
 * transition-property;规定应用过渡的 CSS 属性的名称。
 * transition-duration;定义过渡效果花费的时间。默认是 0。
 * transition-timing-function;规定过渡效果的时间曲线。默认是 "ease"。
 * (效果时间曲线参数详见：http://www.w3school.com.cn/cssref/pr_transition-timing-function.asp)
 * transition-delay;规定过渡效果何时开始。默认是 0。
 * */
.transitionOfCss3 .d1{
	width:40px;
	height:30px;
	border:1px solid black;
	background-color: gray;
	/*设置宽度、高度和背景颜色变化时，采用过渡，时间都为1s*/
	-webkit-transition: width 1s,height 1s,background-color 1s;
	-moz-transition: width 1s,height 1s,background-color 1s;
	-ms-transition: width 1s,height 1s,background-color 1s;
	-o-transition: width 1s,height 1s,background-color 1s;
	transition: width 1s,height 1s,background-color 1s;
}
.transitionOfCss3 .d1:hover{
	width:80px;
	height:60px;
	background-color: red;
}

.transitionOfCss3 .d2{
	width:40px;
	height:30px;
	border:1px solid black;
	background-color: gray;
	/*设置宽度、高度和背景颜色变化时，采用过渡，持续时间都为1s，并且在延时1s后开始动画（参数位置可换）*/
	-webkit-transition: width 1s linear 1s,height 1s linear 1s,background-color 1s linear 1s;
	-moz-transition: width 1s linear 1s,height 1s linear 1s,background-color 1s linear 1s;
	-ms-transition: width 1s linear 1s,height 1s linear 1s,background-color 1s linear 1s;
	-o-transition: width 1s linear 1s,height 1s linear 1s,background-color 1s linear 1s;
	transition: width 1s linear 1s,height 1s linear 1s,background-color 1s linear 1s;
}
.transitionOfCss3 .d2:hover{
	width:80px;
	height:60px;
	background-color: red;
}

/*animation*/
.animationOfCss3 .d1{
	width:40px;
	height:30px;
	border:1px solid black;
	background-color: gray;
	/*定义使用的动画名*/
	-webkit-animation-name: myAnimation;
	-moz-animation-name: myAnimation;
	-o-animation-name: myAnimation;
	animation-name: myAnimation;
	/*定义动画持续时间*/
	-webkit-animation-duration: 2s;
	-moz-animation-duration: 2s;
	-o-animation-duration: 2s;
	animation-duration: 2s;
	/*定义动画的速度曲线*/
	/*
	 *  linear	动画从头到尾的速度是相同的。
	 *	ease	默认。动画以低速开始，然后加快，在结束前变慢。
	 *  ease-in	动画以低速开始。
	 *	ease-out	动画以低速结束。
	 *	ease-in-out	动画以低速开始和结束。
	 * */
	-webkit-animation-timing-function: linear;
	-moz-animation-timing-function: linear;
	-o-animation-timing-function: linear;
	animation-timing-function: linear;
	/*定义动画开始前延迟时间*/
	-webkit-animation-delay: 5s;
	-moz-animation-delay: 5s;
	-o-animation-delay: 5s;
	animation-delay: 5s;
	/*规定动画在播放之前或之后，其动画效果是否可见*/
	/*
	 
	 *  none	不改变默认行为。
	 *	forwards	当动画完成后，保持最后一个属性值（在最后一个关键帧中定义）。
	 * 	backwards	在 animation-delay 所指定的一段时间内，在动画显示之前，应用开始属性值（在第一个关键帧中定义）。
	 *  即：当定义backwards属性后，如果元素自己颜色为gray而0%为黑色，则在动画开始前颜色为黑色
	 *	both	向前和向后填充模式都被应用。
	 * 
	 * */
	-webkit-animation-fill-mode: forwards;
	-moz-animation-fill-mode: forwards;
	-o-animation-fill-mode: forwards;
	animation-fill-mode: backwards;
	/*规定动画播放次数，infinite为无限播放*/
	-webkit-animation-iteration-count: 2;
	-moz-animation-iteration-count: 2;
	-o-animation-iteration-count: 2;
	animation-iteration-count: 2;
	/*规定动画是否应该轮流反向播放动画，次数为1时无效，normal属性为正常播放*/
	-webkit-animation-direction: alternate;
	-moz-animation-direction: alternate;
	-o-animation-direction: alternate;
	animation-direction: alternate;
	/*规定动画正在运行还是暂停*/
	-webkit-animation-play-state: running;
	-moz-animation-play-state: running;
	-o-animation-play-state: running;
	animation-play-state: running;
}

/*也可以使用from{} to{}来定义效果，相当于0%{} 100%{}*/
@keyframes myAnimation
{
0%   {background:white;}
25%  {background:yellow;}
50%  {background:blue;}
75%  {background:green;}
100% {background:red;}
}

@-moz-keyframes myAnimation /* Firefox */
{
0%   {background:gray;}
25%  {background:yellow;}
50%  {background:blue;}
75%  {background:green;}
100% {background:red;}
}

@-webkit-keyframes myAnimation /* Safari and Chrome */
{
0%   {background:gray;}
25%  {background:yellow;}
50%  {background:blue;}
75%  {background:green;}
100% {background:red;}
}

@-o-keyframes myAnimation /* Opera */
{
0%   {background:gray;}
25%  {background:yellow;}
50%  {background:blue;}
75%  {background:green;}
100% {background:red;}
}

.columnOfCss3{
	border: 2px solid black;
	/*规定列数*/
	-webkit-column-count: 3;
	-moz-column-count: 3;
	column-count: 3;
	/*规定列之间的间隙*/
	-webkit-column-gap: 30px;
	-moz-column-gap: 30px;
	column-gap: 30px;
	/*规定列之间的样式*/
	-webkit-column-rule: 30px;
	-moz-column-rule: 30px;
	column-rule: 2px dotted blue;
	/*当未规定列数时，定义每列的宽度*/
	/*column-width: 20px;*/
}

.resizeOfCss3{
	width:60px;
	height:30px;
	border: 2px solid black;
	resize: both;
	overflow: hidden;
}

.outlineOffsetOfCss3{
	width: 100px;
	height: 80px;
	border: 1px solid black;
	outline: 1px solid red;
	/*对轮廓进行偏移，并在超出边框边缘的位置绘制轮廓。*/
	outline-offset: 30px;;
}
/*其他用户界面相关的css3详见：http://www.w3school.com.cn/css3/css3_user_interface.asp*/
